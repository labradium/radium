name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    if: ${{ github.repository_owner == 'silver-radium' }}
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup

      - name: Set up Node (lts)
        uses: actions/setup-node@v4
        with:
          node-version: ">=18.0.0"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: build before release
        run: pnpm run build:prepare

      - name: Check for existing release PR
        id: check_pr
        run: |
          prs=$(gh pr list --repo ${{ github.repository }} --label "release" --state open --json number --jq '.[0].number')
          echo "pr_number=${prs}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or update release pull request
        if: steps.check_pr.outputs.pr_number == ''
        uses: changesets/action@v1
        with:
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
          version: pnpm changeset version
          publish: pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_ENV: "production"

      - name: Update existing release pull request
        if: steps.check_pr.outputs.pr_number != ''
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout -b update-release-pr
          bun changeset version
          git add .
          git commit -m "chore: update release PR with latest changes"
          git push origin update-release-pr
          gh pr edit ${{ env.pr_number }} --body "Updated with latest changes."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_ENV: "production"
